---
ops: [analyze]
model: {
    file: /absolute/path/to/model/architecture.py, 
    class: ModelArchitectureClassName,
    sequence_length: 1000,
    n_classes_to_predict: 2,
    non_strand_specific: {
        use_module: True,
        mode: mean
    }
}
analyze_sequences: !obj:selene.predict.AnalyzeSequences {
    sequence_length: 1000,
    features: !obj:selene.utils.load_features_list {
        input_path: /path/to/distinct_features.txt
    },
    trained_model_path: /path/to/trained/model.pth.tar,
    reference_sequence: !obj:selene.sequences.Genome {
        input_path: /path/to/genome/hg.fa
    }
}
variant_effect_prediction: {
    vcf_files: [
       /path/to/file1.vcf,
       /path/to/file2.vcf
    ], 
    save_data: [predictions, diffs],
    output_dir: /path/to/output_dir 
}
random_seed: 123
...

---
ops: [train, evaluate]
model: {
    file: /home/kathy/models/deepsea.py,
    class: DeepSEA,
    sequence_length: 1000,
    n_classes_to_predict: 919,
    non_strand_specific: {
        use_module: True,
        mode: mean
    }
}
sampler: !obj:selene.samplers.IntervalsSampler {
    genome: /scratch/data_hg/male.hg19.fasta,
    genomic_features: /scratch/data_hg/sorted_regions.bed.gz,
    distinct_features: /scratch/data_hg/distinct_features.txt,
    sample_from_regions: /scratch/data_hg/intervals_only.txt,
    sequence_length: 1000,
    center_bin_to_predict: 200,
    test_holdout: [8, 9],
    validation_holdout: [6, 7],
    feature_thresholds: 0.5,
    random_seed: 127,
    mode: "train",
    save_datasets: [
        test
    ]
}
train_model: !obj:selene.TrainModel {
    batch_size: 64,
    max_steps: 500000,
    report_stats_every_n_steps: 16000,
    n_validation_samples: 32000,
    cpu_n_threads: 32,
    use_cuda: True,
    data_parallel: False
    logging_verbosity: 2,
    output_dir: /home/kathy/example_outputs 
}
lr: 0.10
evaluate_on_test: True
save_datasets: True
...
